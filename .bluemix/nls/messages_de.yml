---
template.name: "Deployment Risk Analytics mit GitHub und Jenkins"
template.description: "Verwenden Sie diese Toolchain, um Erkenntnisse über Ihren Jenkins-Prozess zur kontinuierlichen Integration und Bereitstellung zu erhalten.  Konfigurieren Sie den Jenkins-Server anhand dieser [Anweisungen](https://console.ng.bluemix.net/docs/services/DevOpsInsights/insights_risk.html#integrate_jenkins), um Daten an DevOps Insights zu senden, wenn die Jobs von Jenkins ausgeführt werden.  Sie können auch Qualitätsberichte implementieren, um Bereitstellungen auf der Grundlage von Richtlinien zu blockieren. Die Ergebnisse sehen Sie im Dashboard für Bereitstellungsrisiken (Deployment Risk) von DevOps Insights.\n\nFalls in Ihrer Toolchain ein Benachrichtigungstool wie z. B. Slack konfiguriert ist, werden Benachrichtigungen über den Jobabschluss aus Jenkins an das Benachrichtigungstool weitergeleitet.\n\nZur Angabe des von Jenkins verwendeten Quellenrepositorys kann ein GitHub-Repository konfiguriert werden. Sobald das Repository konfiguriert wurde, ist die Rückverfolgbarkeit verfügbar. Außerdem beginnt DevOps Insights mit dem Mining für das Repository, um Darstellungen für Entwicklererkenntnisse und die Teamdynamik in der DevOps Insights-Anwendung bereitzustellen. Beim erstmaligen Mining-Prozess kann es je nach Größe des Repositorys Minuten, aber auch Stunden dauern, bis die Dashboards für Erkenntnisse über Entwickler und Team gefüllt werden.\n\nDiese Toolchain verwendet Tools, die Teil des Continuous Delivery-Service sind. Wenn sich noch keine Instanz dieses Service in der ausgewählten Organisation befindet, wird sie automatisch hinzugefügt, wenn Sie auf **Erstellen** klicken. Dabei ist der kostenlose Plan [Lite](/catalog/services/continuous-delivery/) ausgewählt.\n\nKlicken Sie auf **Erstellen**, um zu beginnen.\n\nSchrittweise Anweisungen finden Sie im [Lernprogramm](https://www.ibm.com/devops/method/tutorials/tutorial_toolchain_dra)."
template.gettingStarted: "**Ihre Toolchain steht bereit!**\n**Schnelleinstieg:** Konfigurieren Sie den Jenkins-Server, um Daten an DevOps Insights zu senden, wenn Jenkins Testjobs ausführt. Schrittweise Anleitungen bietet das [Lernprogramm](https://www.ibm.com/devops/method/tutorials/tutorial_toolchain_dra?task=2)."
deploy.title: "Beispielbereitstellungsphase"
deploy.description: "Beispieltoolchain"
deploy.longDescription: "Mit Delivery Pipeline wird die kontinuierliche Bereitstellung automatisiert."
deploy.appDescription: "Der Name Ihrer App 'Hello World'"
deploy.appName: "Name der App"
region: "Region"
organization: "Organisation"
space: "Bereich"
testStage: "Testphase"
prodStage: "Produktionsphase"
github.title: "DevOps Insights mit Github und Jenkins"
github.description: "Feb Demo für DevOps Insights mit GitHub und Jenkins-GitHub-Schema"
github.longDescription: "GitHub Service ermöglicht Ihnen die Erstellung oder Verwendung eines vorhandenen GitHub-Repositorys zum Speichern Ihres Quellcodes."
github.sourceRepository: "Quellenrepository"
github.targetRepository: "Zielrepository"
headerSVG.issueTracker: "PROBLEMTRACKER"
headerSVG.gitHub1: "GitHub"
headerSVG.repository: "REPOSITORY"
headerSVG.gitHub2: "GitHub"
headerSVG.jenkins: "JENKINS"
headerSVG.bluemix: "BLUEMIX"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.devops: "DEVOPS"
headerSVG.insights: "INSIGHTS"
headerSVG.slack: "SLACK"
headerSVG.think: "NACHDENKEN"
headerSVG.code: "CODIEREN"
headerSVG.deliver: "BEREITSTELLEN"
headerSVG.run: "AUSFÜHREN"
headerSVG.learn: "LERNEN"
headerSVG.culture: "KULTUR"
